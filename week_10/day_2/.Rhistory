library(tidyverse)
read_csv("data/housing_prices.csv")
house_prices <- read_csv("data/housing_prices.csv")
View(house_prices)
glimpse(house_prices)
ggpairs(total rooms, total_bedrooms)
ggpairs(total_rooms, total_bedrooms)
library(GGally)
ggpairs(total_rooms, total_bedrooms)
ggpairs(house_prices, total_rooms, total_bedrooms)
ggcorr(house_prices %>% select(total_rooms, total_bedrooms), label = TRUE)
alias(total_rooms ~ total_bedrooms, data = house_prices)
summary(house_prices)
house_prices %>%
summarise(correlation = corr(total_rooms, total_bedrooms))
house_prices %>%
summarise(correlation = cor(total_rooms, total_bedrooms))
house_prices %>%
summarise(correlation = cor(total_rooms, total_bedrooms, na.rm = TRUE))
house_prices %>%
summarise(correlation = cor(total_rooms, total_bedrooms), na.rm = TRUE)
house_prices %>%
summarise(correlation = cor(total_rooms, total_bedrooms, na.rm = TRUE))
house_prices %>%
summarise(correlation = cor(total_rooms, total_bedrooms))
house_prices %>%
ggplot(aes(x = total_bedrooms))+
geom_histogram()
house_prices %>%
ggplot(aes(x = total_bedrooms))+
geom_boxplot()
house_prices_imputed <- house_prices %>%
mutate(total_bedrooms = coalesce(total_bedrooms, mean(total_bedrooms, na.rm = TRUE)),
house_prices_imputed <- house_prices %>%
mutate(total_bedrooms = coalesce(total_bedrooms, mean(total_bedrooms, na.rm = TRUE)))
house_prices_imputed %>%
count(is.na)
house_prices_imputed %>%
count(is.na = TRUE)
house_prices_imputed %>%
count(is.na())
house_prices_imputed %>%
count(is.na())
house_prices_imputed %>%
summarise(count = is.na(total_bedrooms))
house_prices_imputed %>%
summarise(count = sum(is.na(total_bedrooms)))
house_prices_imputed <- house_prices %>%
mutate(total_bedrooms = coalesce(total_bedrooms, mean(total_bedrooms, na.rm = TRUE)))
house_prices_imputed %>%
summarise(correlation = cor(total_rooms, total_bedrooms))
house_prices_trim <- house_prices_imputed %>%
select(-total_bedrooms)
View(house_prices_trim)
ggpairs(house_prices_trim, progress = FALSE)
ggpairs(house_prices_trim, progress = FALSE)
house_prices_trim %>%
ggplot(aes(x = mean_income, y = mean_house_price))+
geom_point()
house_prices_trim %>%
ggplot(aes(x = median_income, y = mean_house_price))+
geom_point()
house_prices_trim %>%
ggplot(aes(x = median_income, y = mean_house_value))+
geom_point()
house_prices_trim %>%
ggplot(aes(x = median_income, y = median_house_value))+
geom_point()
house_prices_trim %>%
ggplot(aes(x = housing_median_age, y = median_house_value))+
geom_point()
house_prices_trim %>%
ggplot(aes(x = total_rooms, y = median_house_value))+
geom_point()
house_prices_trim %>%
ggplot(aes(x = households, y = population))+
geom_point()
house_prices_trim %>%
ggplot(aes(x = population, y = total_rooms))+
geom_point()
house_prices_trim %>%
ggplot(aes(y = households, x = population))+
geom_point()
house_prices_trim %>%
ggplot(aes(y = ocean_proximity, x = median_house_value))+
geom_boxplot()
house_prices_trim %>%
distinct(ocean_proximity)
library(fastDummies)
house_prices_dummy <- house_prices_trim %>%
fastDummies::dummy_cols(select_columns = "ocean_proximity",
remove_first_dummy = TRUE,# don't need this column for our model
remove_selected_columns = TRUE)
house_prices_dummy
autoplot(model)
# formula = y varies with x
model <- lm(median_house_value ~ median_income,
data = house_prices_trim)
autoplot(model)
library(ggfortify)
# formula = y varies with x
model <- lm(median_house_value ~ median_income,
data = house_prices_trim)
autoplot(model)
summary(model)
model2 <- lm(median_house_value ~ median_income + total_rooms,
data = house_prices_trim)
autoplot(model2)
summary(model2)
model2 <- lm(median_house_value ~ median_income + population,
data = house_prices_trim)
model2 <- lm(median_house_value ~ median_income + population,
data = house_prices_trim)
autoplot(model2)
summary(model2)
model2 <- lm(median_house_value ~ median_income + households,
data = house_prices_trim)
autoplot(model2)
summary(model2)
model2 <- lm(median_house_value ~ median_income + total_rooms,
data = house_prices_trim)
autoplot(model2)
summary(model2)
model2 <- lm(median_house_value ~ median_income + households,
data = house_prices_trim)
autoplot(model2)
summary(model2)
model3 <- lm(median_house_value ~ median_income + housing_median_age,
data = house_prices_trim)
autoplot(model3)
summary(model3)
housing_prices_eng <- house_prices %>%
mutate(rooms_per_house = total_rooms/ households,
people_per_house = population / households,
rooms_per_person = total_rooms / population)
housing_prices_eng
hoursing_prices_eng %>%
skimr::skim() %>%
view()
housing_prices_eng %>%
skimr::skim() %>%
view()
housing_prices_eng %>%
ggplot(aes(x = median_income))+
geom_histogram()
housing_prices_eng %>%
skimr::skim() %>%
view()
housing_log <- housing_prices_eng %>%
select(-c(ocean_proximity, latitude, longitude, housing_median_age)) %>%
mutate(across(everything(), log)) %>% # log transofrm everything but the 4 columns above
rename_with(~ paste0("log_", .x)) %>%
bind_cols(housing_prices_eng)
housing_log
housing_log%>%
ggplot(aes(x = log_median_income))+
geom_histogram()
housing_log %>%
ggplot()+
aes(x = median_income, y = median_house_value)+
geom_point()
housing_log %>%
ggplot(aes(x = ocean_proximity, y = median_house_value))+
geom_boxplot()
geom_point()
housing_log %>%
ggplot(aes(x = latitude, y = longitude, colour = ocean_proximity))+
geom_point()
housing_log %>%
ggplot(aes(y = latitude, x = longitude, colour = ocean_proximity))+
geom_point()
housing_ocean
housing_ocean <- housing_log %>%
mutate(ocean_prox = if_else(
ocean_proximity %in% c("<1H OCEAN", "NEAR BAY", "NEAR OCEAN"), "NEAR WATER",
ocean_proximity
))
housing_ocean
housing_log %>%
ggplot(aes(y = latitude, x = longitude, colour = ocean_prox))+
geom_point()
housing_ocean %>%
ggplot(aes(y = latitude, x = longitude, colour = ocean_prox))+
geom_point()
housing_ocean %>%
ggpairs()
housing_ocean %>%
select(log_median_house_value, housing_median_age, log_median_income, ocean_prox) %>%
ggpairs()
housing_ocean %>%
select(log_median_house_value, housing_median_age, log_median_income, ocean_prox) %>%
ggpairs(aes(colour = ocean_prox, # use this to colour groups
alpha = 0.5)) # groups semi transparent
housing_ocean %>%
select(log_median_house_value, log_total_rooms, log_population, log_households, log_rooms_per_house, log_people_per_house, log_rooms_per_person) %>%
ggpairs(aes())
housing_ocean %>%
select(log_median_house_value, log_total_rooms, log_population, log_households, log_rooms_per_house, log_people_per_house, log_rooms_per_person) %>%
ggpairs()
autoplot(mod1a)
mod1a <- lm(log_median_house_value ~ log_median_income,
data = housing_ocean)
autoplot(mod1a)
mod1a <- lm(log_median_house_value ~ log_median_income,
data = housing_ocean)
autoplot(mod1a)
# without log transofmration
mod1a_nolog <- lm(median_house_value ~ median_income,
data = housing_ocean)
autoplot(mod1a_nolog)
summary(mod1a)
mod1b <- lm(log_median_house_value ~ ocean_prox,
data = housing_ocean)
autoplot(mod1b)
summary(mod1b)
library(modelr)
housing_ocean %>%
add_residuals(model = mod1a)
housing_ocean %>%
add_residuals(model = mod1a) %>%
select(log_median_house_value, ocean_prox, log_rooms_per_person, log_people_per_house, resid)
library(modelr)
housing_ocean %>%
add_residuals(model = mod1a) %>%
select(log_median_house_value, ocean_prox, log_rooms_per_person, log_people_per_house, resid) %>%
ggpairs() # resid is how far we are off

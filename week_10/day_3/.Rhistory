read_csv("data/kc_house_data.csv")
library(tidyverse)
library(modelr)
library(ggfortify)
library(GGally)
read_csv("data/kc_house_data.csv")
kc_house <- read_csv("data/kc_house_data.csv")
View(kc_house)
kc_house %>%
select(-c(date, id, sqft_living15, sqft_lot15, zipcode))
kc_tidy <- kc_house %>%
select(-c(date, id, sqft_living15, sqft_lot15, zipcode))
View(kc_tidy)
kc_tidy %>%
distinct(waterfront)
kc_tidy %>%
class(waterfront)
kc_tidy %>%
names(waterfront)
kc_tidy %>%
name(waterfront)
kc_tidy %>%
class(waterfront)
summary(kc_tidy)
glimpse(kc_tidy)
kc_tidy %>%
mutate(waterfront = as.logical(waterfront))
kc_tidy <- kc_tidy %>%
mutate(waterfront = as.logical(waterfront))
head(kc_tidy)
kc_tidy %>%
summarise(yr_renovated = count())
kc_tidy %>%
summarise(yr_renovated = n())
kc_tidy %>%
group_by(yr_renovated) %>%
summarise(yr_renovated = n())
kc_tidy %>%
mutate(renovated = if_else(yr_renovated == 0, "FALSE", TRUE))
kc_tidy %>%
mutate(renovated = if_else(yr_renovated == 0, "not renovated", "renovated"))
kc_tidy %>%
mutate(renovated = if_else(yr_renovated == 0, "not renovated", "renovated") %>%
renovated = as.logical)
kc_tidy %>%
mutate(renovated = if_else(yr_renovated == 0, "not renovated", "renovated") %>%
renovated = as.logical(renovated))
mutate(renovated = if_else(yr_renovated == 0, "not renovated", "renovated")
kc_tidy %>%
kc_tidy %>%
mutate(renovated = if_else(yr_renovated == 0, "not renovated", "renovated"))
kc_tidy <- kc_tidy %>%
mutate(renovated = if_else(yr_renovated == 0, "not renovated", "renovated"))
head(kc_tidy)
kc_tidy %>%
mutate(renovated = as.logical(renovated))
kc_tidy %>%
mutate(renovated = recode(renovated, "renovated" = "TRUE",
"not renovated" = "FALSE")
kc_tidy %>%
mutate(renovated = recode(renovated, "renovated" = "TRUE",
"not renovated" = "FALSE"))
kc_tidy %>%
mutate(renovated = recode(renovated, "renovated" = "TRUE",
"not renovated" = "FALSE")) %>%
mutate(renovated = as.logical(renovated))
kc_tidy <- kc_tidy %>%
mutate(renovated = recode(renovated, "renovated" = "TRUE",
"not renovated" = "FALSE")) %>%
mutate(renovated = as.logical(renovated))
kc_tidy <- kc_tidy %>%
mutate(renovated = if_else(yr_renovated == 0, "not renovated", "renovated"))
head(kc_tidy)
head(kc_tidy)
kc_tidy <- kc_tidy %>%
mutate(renovated = recode(renovated, "renovated" = "TRUE",
"not renovated" = "FALSE")) %>%
mutate(renovated = as.logical(renovated))
head(kc_tidy)
kc_tidy %>%
distinct(view, condition, grade)
kc_tidy %>%
distinct(view)
kc_tidy %>%
distinct(condition)
kc_tidy %>%
distinct(grade)
kc_tidy %>%
mutate(grade = if_else(grade >= 3, ~ "LOW",
grade >= 10, ~ "MEDIUM",
grade >= 13 ~ "HIGH"))
kc_tidy %>%
mutate(grade = if_else(grade >= 3 ~ "LOW",
grade >= 10 ~ "MEDIUM",
grade >= 13 ~ "HIGH"))
kc_tidy %>%
mutate(grade = if_else(grade <= 3 ~ "LOW",
grade <= 10 ~ "MEDIUM",
grade <= 13 ~ "HIGH"))
kc_tidy %>%
mutate(grade = case_when(grade <= 3 ~ "LOW",
grade <= 10 ~ "MEDIUM",
grade <= 13 ~ "HIGH"))
kc_tidy <- kc_tidy %>%
mutate(grade = case_when(grade <= 3 ~ "LOW",
grade <= 10 ~ "MEDIUM",
grade <= 13 ~ "HIGH"))
head(kc_tidy)
kc_tidy %>%
distinct(view)
kc_tidy %>%
mutate(bed_plus_bath = bedrooms + bathrooms)
kc_tidy %>%
mutate(bed_plus_bath = bedrooms + bathrooms, .after = bathrooms)
kc_tidy <- kc_tidy %>%
mutate(bed_plus_bath = bedrooms + bathrooms, .after = bathrooms)
head(kc_tidy)
kc_tidy <- kc_tidy %>%
mutate(bed_plus_bath = bedrooms + bathrooms, .after = bathrooms,
total_sqft = sqft_living + sqft_lot, .after = sqft_lot)
kc_tidy <- kc_tidy %>%
mutate(bed_plus_bath = bedrooms + bathrooms, .after = bathrooms,
total_sqft = sqft_living + sqft_lot, .after = sqft_lot)
kc_tidy <- kc_tidy %>%
mutate(bed_plus_bath = bedrooms + bathrooms, .after = bathrooms,
total_sqft = sqft_living + sqft_lot, .after = sqft_lot)
kc_tidy <- kc_tidy %>%
mutate(bed_plus_bath = bedrooms + bathrooms, .after = bathrooms,
total_sqft = sqft_living + sqft_lot, .before = floors)
kc_tidy <- kc_tidy %>%
mutate(bed_plus_bath = bedrooms + bathrooms, .after = bathrooms,
total_sqft = sqft_living + sqft_lot)
kc_tidy <- kc_tidy %>%
mutate(bed_plus_bath = bedrooms + bathrooms, .after = bathrooms,
total_sqft = sqft_living + sqft_lot) %>%
relocate(total_sqft = .after sqft_lot)
kc_tidy <- kc_tidy %>%
mutate(bed_plus_bath = bedrooms + bathrooms, .after = bathrooms,
total_sqft = sqft_living + sqft_lot) %>%
relocate(total_sqft, .after = sqft_lot)
head(kc_tidy)
skimr::skim(kc_tidy) %>%
view()
kc_tidy <- kc_tidy %>%
mutate(bed_plus_bath = bedrooms + bathrooms, .after = bathrooms)
head(kc_tidy)
library(fastDummies)
kc_tidy <- kc_tidy %>%
mutate(bed_plus_bath = bedrooms + bathrooms, .after = bathrooms)
head(kc_tidy)
kc_dummy_condition <- kc_tidy %>%
fastDummies::dummy_cols(select_columns = "condition",
remove_first_dummy = TRUE,
remove_selected_columns = TRUE)
kc_dummy_condition
kc_tidy %>%
ggplot(aes(y = latitude, x = longitude, colour = view))+
geom_point()
kc_tidy %>%
ggplot(aes(y = lat, x = long, colour = view))+
geom_point()
kc_tidy %>%
ggplot(aes(y = lat, x = long, colour = waterfront))+
geom_point()
kc_tidy %>%
ggplot(aes(y = lat, x = long, colour = view))+
geom_point()
kc_tidy %>%
ggplot(aes(y = lat, x = long, colour = waterfront))+
geom_point()
kc_tidy %>%
ggplot(aes(y = lat, x = long, colour = condition))+
geom_point()
kc_tidy %>%
ggplot(aes(y = lat, x = long, colour = waterfront))+
geom_point()
alias(price ~ ., data = kc_tidy)
kc_tidy <- kc_tidy %>%
mutate(bed_plus_bath = bedrooms + bathrooms, .after = bathrooms)
head(kc_tidy)
kc_dummy_condition <- kc_tidy %>%
fastDummies::dummy_cols(select_columns = "condition",
remove_first_dummy = TRUE,
remove_selected_columns = TRUE)
kc_dummy_condition
kc_tidy %>%
ggplot(aes(y = lat, x = long, colour = waterfront))+
geom_point()
alias(price ~ ., data = kc_tidy)
View(kc_tidy)
View(kc_house)
kc_tidy <- kc_house %>%
select(-c(date, id, sqft_living15, sqft_lot15, zipcode))
summary(kc_tidy)
glimpse(kc_tidy)
kc_tidy <- kc_tidy %>%
mutate(waterfront = as.logical(waterfront))
head(kc_tidy)
kc_tidy %>%
group_by(yr_renovated) %>%
summarise(yr_renovated = n())
kc_tidy <- kc_tidy %>%
mutate(renovated = if_else(yr_renovated == 0, "not renovated", "renovated"))
head(kc_tidy)
kc_tidy <- kc_tidy %>%
mutate(renovated = recode(renovated, "renovated" = "TRUE",
"not renovated" = "FALSE")) %>%
mutate(renovated = as.logical(renovated))
head(kc_tidy)
kc_tidy %>%
distinct(grade)
kc_tidy <- kc_tidy %>%
mutate(grade = case_when(grade <= 3 ~ "LOW",
grade <= 10 ~ "MEDIUM",
grade <= 13 ~ "HIGH"))
head(kc_tidy)
kc_tidy <- kc_tidy %>%
mutate(bed_plus_bath = bedrooms + bathrooms, .after = bathrooms)
head(kc_tidy)
kc_dummy_condition <- kc_tidy %>%
fastDummies::dummy_cols(select_columns = "condition",
remove_first_dummy = TRUE,
remove_selected_columns = TRUE)
kc_dummy_condition
kc_tidy %>%
ggplot(aes(y = lat, x = long, colour = waterfront))+
geom_point()
alias(price ~ ., data = kc_tidy)
kc_trim <- kc_tidy %>%
select(-c(bedrooms, bathrooms, sqrt_basement))
kc_trim <- kc_tidy %>%
select(-c(bedrooms, bathrooms, sqft_basement))
alias(price ~ ., data = kc_trim)
View(kc_tidy)
houses_tidy_numeric <- houses_trim %>%
select_if(is.numeric)
houses_tidy_numeric <- kc_trim %>%
select_if(is.numeric)
houses_tidy_numeric <- kc_trim %>%
select_if(is.numeric) %>%
ggpairs()
houses_tidy_numeric %>%
ggpairs()
View(houses_tidy_numeric)
houses_tidy_numeric <- kc_trim %>%
select_if(is.numeric)
houses_tidy_numeric %>%
ggpairs()
houses_tidy_numeric %>%
ggpairs()
houses_tidy_numeric %>%
ggpairs()+
theme_classic()
houses_tidy_numeric %>%
ggpairs()+
upper = list(continuous = wrap("cor", size = 9)))
houses_tidy_numeric %>%
ggpairs()+
upper = list(continuous = wrap("cor", size = 9))
houses_tidy_numeric %>%
ggpairs()
houses_tidy_numeric %>%
ggpairs(upper = list(continuous = wrap("cor", size = 9)))
houses_tidy_numeric %>%
ggpairs(upper = list(continuous = wrap("cor", size = 2)))
houses_tidy_numeric %>%
ggpairs(upper = list(continuous = wrap("cor", size = 4)))
houses_tidy_numeric %>%
ggpairs(upper = list(continuous = wrap("cor", size = 3)))
kc_trim <- kc_tidy %>%
select(-c(bed_plus_bath, sqft_basement, yr_renovated))
alias(price ~ ., data = kc_trim)
houses_tidy_numeric <- kc_trim %>%
select_if(is.numeric)
houses_tidy_numeric %>%
ggpairs(upper = list(continuous = wrap("cor", size = 3)))
houses_tidy_nonnumeric <- houses_tidy %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric <- kc_trim %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric %>%
ggpairs(upper = list(continuous = wrap("cor", size = 3)))
houses_tidy_nonnumeric %>%
ggpairs(upper = list(continuous = wrap("cor", size = 3)))
houses_tidy_nonnumeric$price <- houses_tidy$price
houses_tidy_nonnumeric <- kc_trim %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric$price <- houses_tidy$price
houses_tidy_nonnumeric <- kc_trim %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric$price <- kc_trim$price
houses_tidy_nonnumeric$price
View(houses_tidy_nonnumeric)
houses_tidy_nonnumeric <- kc_trim %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric$price <- kc_trim$price
View(houses_tidy_nonnumeric)
houses_tidy_nonnumeric$price <- kc_trim$price
View(houses_tidy_nonnumeric)
View(houses_tidy_nonnumeric)
houses_tidy_nonnumeric %>%
ggpairs()
autoplot(mod1a)
mod1a <- lm(price ~ sqft_living,
data = kc_trim)
autoplot(mod1a)
View(kc_trim)
mod1a <- lm(price ~ bathrooms,
data = kc_trim)
autoplot(mod1a)
mod1a <- lm(price ~ sqft_above,
data = kc_trim)
mod1a <- lm(price ~ sqft_above,
data = kc_trim)
autoplot(mod1a)
mod1a <- lm(price ~ sqrt_living,
data = kc_trim)
mod1a <- lm(price ~ sqft_living,
data = kc_trim)
mod1a <- lm(price ~ sqft_living,
data = kc_trim)
autoplot(mod1a)
mod1a <- lm(price ~ sqft_view,
data = kc_trim)
mod1a <- lm(price ~ view,
data = kc_trim)
autoplot(mod1a)
mod1a <- lm(price ~ bedrooms,
data = kc_trim)
autoplot(mod1a)
mod1a <- lm(price ~ bathrooms,
data = kc_trim)
autoplot(mod1a)
View(kc_dummy_condition)
mod1a <- lm(price ~ waterfront,
data = kc_trim)
autoplot(mod1a)
mod1a <- lm(price ~ bathrooms,
data = kc_trim)
autoplot(mod1a)
kc_dummy_view <- kc_dummy_condition %>%
fastDummies::dummy_cols(select_columns = "view",
remove_first_dummy = TRUE,
remove_selected_columns = TRUE)
kc_dummy_view
alias(price ~ ., data = kc_dummy_view)
kc_trim <- kc_dummy_view %>%
select(-c(bed_plus_bath, sqft_basement, yr_renovated))
alias(price ~ ., data = kc_trim)
houses_tidy_numeric <- kc_trim %>%
select_if(is.numeric)
houses_tidy_numeric %>%
ggpairs(upper = list(continuous = wrap("cor", size = 3)))
houses_tidy_numeric %>%
ggpairs(upper = list(continuous = wrap("cor", size = 2)))
houses_tidy_numeric %>%
ggpairs(upper = list(continuous = wrap("cor", size = 1)))
houses_tidy_numeric %>%
ggpairs(upper = list(continuous = wrap("cor", size = 2)))
houses_tidy_numeric %>%
ggpairs(upper = list(continuous = wrap("cor", size = 1.5)))
alias(price ~ ., data = kc_tidy)
kc_trim <- kc_tidy %>%
select(-c(bed_plus_bath, sqft_basement, yr_renovated))
alias(price ~ ., data = kc_tidy)
alias(price ~ ., data = kc_trim)
houses_tidy_numeric <- kc_trim %>%
select_if(is.numeric)
houses_tidy_numeric %>%
ggpairs(upper = list(continuous = wrap("cor", size = 1.5)))
houses_tidy_numeric %>%
ggpairs(upper = list(continuous = wrap("cor", size = 3)))
houses_tidy_nonnumeric %>%
ggpairs()
mod1a <- lm(price ~ waterfront,
data = kc_trim)
mod1a <- lm(price ~ waterfront,
data = kc_trim)
autoplot(mod1a)
mod1a <- lm(price ~ sqft_living,
data = kc_trim)
mod1a <- lm(price ~ sqft_living,
data = kc_trim)
autoplot(mod1a)
mod1a <- lm(price ~ sqft_above,
data = kc_trim)
autoplot(mod1a)
kc_trim <- kc_tidy %>%
select(-c(bed_plus_bath, sqft_above, yr_renovated))
alias(price ~ ., data = kc_trim)
houses_tidy_numeric <- kc_trim %>%
select_if(is.numeric)
houses_tidy_numeric %>%
ggpairs(upper = list(continuous = wrap("cor", size = 3)))
mod1a <- lm(price ~ bathroom,
data = kc_trim)
mod1a <- lm(price ~ bathroom,
data = kc_trim)
mod1a <- lm(price ~ bathrooms,
data = kc_trim)
autoplot(mod1a)
summary(mod1a)
mod1b <- lm(price ~ sqft_living,
data = kc_trim)
autoplot(mod1b)
summary(mod1b)
mod1c <- lm(price ~ waterfront,
data = kc_trim)
autoplot(mod1c)
mod1c <- lm(price ~ grade,
data = kc_trim)
mod1c <- lm(price ~ grade,
data = kc_trim)
autoplot(mod1c)
mod1c <- lm(price ~ waterfront,
data = kc_trim)
autoplot(mod1c)
summary(mod1c)
kc_resid <- kc_trim %>%
add_residuals(model = mod1a) %>%
select(-c(price, bathrooms))
View(kc_resid)
kc_resid %>%
ggpairs(aes(colour = grade, alpha = 0.3))
kc_resid %>%
ggpairs(aes(colour = grade, alpha = 0.3))
kc_resid %>%
ggpairs()
kc_resid %>%
ggpairs(upper = list(continuous = wrap("cor", size = 3)))
kc_resid %>%
ggpairs(upper = list(continuous = wrap("cor", size = 2)))
autoplot(mod2a)
mod2a <- lm(price ~ bathrooms + sqft_living,
data = kc_trim)
autoplot(mod2a)
summary(mod2a)
kc_resid2 <- kc_trim %>%
add_residuals(model = mod2a) %>%
select(-c(price, bathrooms, sqft_living))
kc_resid2 %>%
ggpairs(upper = list(continuous = wrap("cor", size = 2)))
kc_resid2 %>%
ggpairs(upper = list(continuous = wrap("cor", size = 2)))
houses_tidy_nonnumeric %>%
ggpairs(aes(colour = grade, alpha = 0.5))
autoplot(mod2b)
mod2b <- lm(price ~ bathrooms + waterfront,
data = kc_trim)
autoplot(mod2b)
summary(mod2b)
autoplot(mod3a)
mod3a <- lm(price ~ bathrooms + sqft_living + waterfront,
data = kc_trim)
autoplot(mod3a)
summary(mod3a)
mod3b <- lm(price ~ bathrooms + sqft_living + view,
data = kc_trim)
autoplot(mod3b)
summary(mod3b)
mod3c <- lm(price ~ bathrooms + sqft_living + grade,
data = kc_trim)
autoplot(mod3c)
summary(mod3c)
kc_resid2 <- kc_trim %>%
add_residuals(model = mod3b) %>%
select(-c(price, bathrooms, sqft_living, -view))
kc_resid2 <- kc_trim %>%
add_residuals(model = mod2a) %>%
select(-c(price, bathrooms, sqft_living))
kc_resid3 <- kc_trim %>%
add_residuals(model = mod3b) %>%
select(-c(price, bathrooms, sqft_living, -view))
kc_resid3 %>%
ggpairs(upper = list(continuous = wrap("cor", size = 2)))
kc_resid3 %>%
ggpairs(upper = list(continuous = wrap("cor", size = 2)))
View(kc_resid3)
autoplot(mod4a)
mod4a <- lm(price ~ bathrooms + sqft_living + view + lat,
data = kc_trim)
autoplot(mod4a)
summary(mod4a)
autoplot(mod4b)
mod4b <- lm(price ~ bathrooms + sqft_living + view + grade,
data = kc_trim)
autoplot(mod4b)
mod4c <- lm(price ~ bathrooms + sqft_living + view + condition,
data = kc_trim)
autoplot(mod4c)
summary(mod4b)
summary(mod4c)
